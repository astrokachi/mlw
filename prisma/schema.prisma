datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}



model Subscribtion { 
  id Int @id @default(autoincrement())
  email String @unique
  createdAt DateTime @default(now())
}

model Client {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  email String @unique
  password String
  createdAt DateTime @default(now())
  profile ClientProfile?
}

model ClientProfile {
  id Int @id @default(autoincrement())
  relationshipStatus String @default("")
  ageGroup String  @default("")
  gender String  @default("")
  sexuality String  @default("")
  religion  String  @default("")
  bio String  @default("")
  username String  @default("")
  phone String  @default("")
  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade) 
  clientId Int @unique
}

model Therapist {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  email String @unique
  password String
  createdAt DateTime @default(now())
  profile TherapistProfile?
  account Account?
}

model TherapistProfile {
  id Int @id @default(autoincrement())
  areaOfSpecialization String @default("")
  yearsOfExperience String @default("")
  workingHours String @default("")
  description String @default("")
  techniques String @default("")
  experience String @default("")
  religion String @default("")
  createdAt DateTime @default(now())
  therapist Therapist @relation(fields: [therapistId], references: [id], onDelete: Cascade)
  therapistId Int @unique
}

model Account {
  id Int @id @default(autoincrement())
  accountNumber String
  accountName String
  bankName String?
  swiftCode String
  createdAt DateTime @default(now())
  therapist Therapist @relation(fields: [therapistId], references: [id], onDelete: Cascade)
  therapistId Int @unique
}